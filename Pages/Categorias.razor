@page "/categorias"
@inject ICookie cookie
@* @rendermode InteractiveWebAssembly *@


@* <h5>Cadastro de Categorias</h5> *@
<SectionContent SectionName="Top">
	<p class="text-center mt-3">Gestão de Categorias</p>
</SectionContent>
<section class="d-flex flex-column gap-5">



	<EditForm Model="category" OnValidSubmit="AddCategory" OnInvalidSubmit="ErrorAddCategory">
		<DataAnnotationsValidator />
		<ValidationSummary/>

		<div class="section_input_category">

			<div class="d-flex align-items-start flex-column">
				<label for="input_name">Nome</label>
				<InputText id="input_name" @bind-Value="_title" class="form-control" @ref="input_name" />
				@* <ValidationMessage For="() => category.Title" /> *@

			</div>

			<div class="d-flex align-items-centerflex-row  gap-3 mt-3">

				<div class="d-flex align-items-center flex-column">
					<label for="input_isIncome">É receita?</label>
					<InputCheckbox id="input_isIncome" @bind-Value="_isIncome" style="width: 20px; height: 20px; accent-color: var(--verdePrincipal)" />



				</div>
				<div class="d-flex align-items-center flex-column">
					<label for="_isMonthly">É recorrente?</label>
					<InputCheckbox id="_isMonthly" @bind-Value="_isMonthly" style="width: 20px; height: 20px; accent-color: var(--verdePrincipal)" />

				</div>

			</div>

			@* <div class="d-flex align-items-center flex-row  gap-1 mt-3"> *@
			@* 	<label for="input_repeatPer">Recorrência:</label> *@
			@* 	<select @bind="_day" class="form-select" id="input_repeatPer" disabled=@IsMonthlyType()> *@
			@* 		<option value="m" selected>Mensal</option> *@
			@* 		<option value="d">Diária</option> *@
			@* 	</select> *@

			@* 	<div class="d-flex align-items-center flex-row gap-1" style="margin-left: 5px;"> *@
			@* 		<label for="input_day">Dia:</label> *@
			@* 		<SelectDay Day="@_day" disabled=@IsMonthlyType() /> *@
			@* 		<ValidationMessage For="() => category.RepeatPer" /> *@

			@* 	</div> *@

			@* </div> *@

			<div class="d-flex align-items-start flex-column mt-2">
				<label for="input_amount">Valor R$</label>
				<InputAmount Amount="@(_amount.ToString())" disabled=@IsMonthlyType() />


			</div>
			<div class="d-flex flex-row gap-2">

				<button type="submit" class="btn btn-secondary mt-3">Salvar</button>
				<button type="button" class="btn btn-warning mt-3" @onclick="CleanFields">Limpar</button>
				<button type="button" class="btn btn-danger mt-3" @onclick="CleanFields">Deletar</button>
			</div>
		</div>


	</EditForm>

	<div class="tables_div row-cols-2">
		<!-- Table de categorias de saída -->
		<div class="d-flex flex-column align-items-center">
			<p>Categorias de Saída</p>
			<table class="table table-hover border">
				<thead>
					<tr class="text-center" style="background-color: #FFC107">
						<th colspan="2">Nome</th>
						<th>É Fixa?</th>
						<th>Dia de venc.</th>
						<th>Valor</th>
					</tr>
				</thead>
				<tbody>

					@foreach (Category category in categories)
					{
						if (category.IsIncome == false)
						{
							<tr class="text-center" @ondblclick="@(() => GetInfo(category))">
								<td colspan="2">@category.Title</td>
								<td>@(category.IsMonthly ? "Sim" : "Não")</td>
								<td>@category.Day</td>
								<td>R$ @category.Amount.ToString("F2")</td>
							</tr>
						}
					}

				</tbody>
			</table>
		</div>

		<!-- Table de categorias de entrada -->
		<div class="d-flex flex-column align-items-center">
			<p>Categorias de Entrada</p>
			<table class="table table-hover border">
				<thead>
					<tr class="text-center" style="background-color: #231058; color: #fff;">
						<th colspan="2">Nome</th>
						<th>É Fixa?</th>
						<th>Dia de venc.</th>
						<th>Valor</th>
					</tr>
				</thead>
				<tbody>

					@foreach (Category category in categories)
					{
						if (category.IsIncome)
						{
							<tr class="text-center" @ondblclick="@(() => GetInfo(category))">
								<td colspan="2">@category.Title</td>
								<td>@(category.IsMonthly ? "Sim" : "Não")</td>
								<td>@category.Day</td>
								<td>R$ @category.Amount.ToString("F2")</td>
							</tr>
						}
					}

				</tbody>
			</table>
		</div>

	</div>
</section>

@* <p class="alert alert-info">@_msg</p> *@


@code {
	Category category = new();
	private int _id { get; set; }
	private string? _title { get; set; }
	private bool _isIncome { get; set; }
	private string? _day { get; set; }
	private bool _isMonthly { get; set; }
	private double _amount { get; set; }

	public InputText input_name { get; set; } = null!;

	private string? _msg { get; set; }

	private List<Category> categories = new();

	protected override async Task OnInitializedAsync()
	{
		// await cookie.SetValue("testekey", "Esse foi o teste do value", 2);
		// _msg = await cookie.GetValue("testekey");

		categories = FakeData();
	}

	private void AddCategory()
	{

	}

	private void ErrorAddCategory()
	{

	}

	private bool IsMonthlyType()
	{
		if (!_isMonthly)
		{
			return true;
		}
		else
		{
			return false;
		}
	}

	private async Task CleanFields()
	{
		_id = 0;
		_title = "";
		_isIncome = false;
		_isMonthly = false;
		_amount = 0;

		categories = FakeData();

		await Utils.SetFocus(input_name);

	}

	private async Task TesteCookie()
	{
		await cookie.SetValue("testekey", "Esse foi o teste do value", 2);
		_msg = await cookie.GetValue("testekey");
	}

	private List<Category> FakeData()
	{
		List<Category> categorias = new List<Category>();

		categorias.Add(new Category { Id = 1, Title = "Mercado", IsIncome = false, IsMonthly = false, Amount = 0, Day = "" });
		categorias.Add(new Category { Id = 2, Title = "Hortifruti", IsIncome = false, IsMonthly = false, Amount = 0, Day = "" });
		categorias.Add(new Category { Id = 3, Title = "Aluguel", IsIncome = false, IsMonthly = true, Amount = 800.20, Day = "30" });
		categorias.Add(new Category { Id = 4, Title = "Adiantamento", IsIncome = true, IsMonthly = true, Amount = 1820.59, Day = "20" });
		categorias.Add(new Category { Id = 5, Title = "Venda", IsIncome = true, IsMonthly = false, Amount = 0, Day = "" });

		return categorias;
	}

	private void GetInfo(Category cat)
	{
		_title = cat.Title;
		_isIncome = cat.IsIncome;
		_isMonthly = cat.IsMonthly;
		_amount = cat.Amount;
	}

}
